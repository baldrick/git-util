#!/bin/sh

usage()
{
    echo "Usage: $0 status|log|pull|push|add-commit"
    echo "Unknown command $1 - exiting"
    exit -1
}

generic_command()
{
    args=$1
    shift

    # If there are spaces in the names of directories we're processing, we need to handle that.
    # We'll only get unescaped spaces if there are spaces in the names of directories we're
    # recursively searching.  For directories passed on the command line, spaces must be escaped.
    if [ $# -eq 1 ]
    then
        $GITR_HOME/git-recurse "git $command $args" "$*"
    else
        $GITR_HOME/git-recurse "git $command $args" $*
    fi
}

generic_command_nongit()
{
    command=$1
    args=$2
    shift 2

    # If there are spaces in the names of directories we're processing, we need to handle that.
    # We'll only get unescaped spaces if there are spaces in the names of directories we're
    # recursively searching.  For directories passed on the command line, spaces must be escaped.
    if [ $# -eq 1 ]
    then
        $GITR_HOME/git-recurse "$command $args" "$*"
    else
        $GITR_HOME/git-recurse "$command $args" $*
    fi
}

add_commit()
{
    if [ $# -eq 0 ]
    then
        $GITR_HOME/git-recurse "git add --all ." .
        $GITR_HOME/git-recurse "git commit -m \"Auto-commit on `date +%d-%h-%Y\ at\ %H:%M:%S`\"" .
    else
        log warn "add-commit does not support specified directories: exiting"
	exit -1
    fi
}

export GITR_HOME=`dirname $0`
. $GITR_HOME/git-fn

parse_opts $*
shift $shift

# Default the target directory to the current directory.
if [ $# -eq 0 ]
then
    target_dirs=.
else
    if [ $# -gt 1 ]
    then
        target_dirs=$*
    else
        target_dirs="$*"
    fi
fi

# Some commands have slightly different arguments...
case $command in
    status)	generic_command "" "$target_dirs";;
    log)	generic_command "--oneline --name-status --since=\"2 days ago\"" "$target_dirs";;
    pull)	generic_command "$remote_repo $source_branch$separator$dest_branch" "$target_dirs";;
    push)	generic_command "$remote_repo $source_branch$separator$dest_branch" "$target_dirs";;
    add-commit)	add_commit;;
    du)         generic_command_nongit du -sk "$target_dirs";;
    *)		usage $command;;
esac
